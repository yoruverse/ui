name: Deployment Notifications

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed

jobs:
  notify:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get commit info
      id: commit
      run: |
        echo "short_sha=$(git rev-parse --short ${{ github.event.workflow_run.head_sha }})" >> $GITHUB_OUTPUT
        echo "commit_message=$(git log --format=%B -n 1 ${{ github.event.workflow_run.head_sha }} | head -n 1)" >> $GITHUB_OUTPUT

    - name: Create deployment status
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: context.payload.deployment?.id || 0,
            state: 'success',
            environment_url: 'https://ui.yoruverse.com',
            description: 'Docker image built and pushed to Docker Hub'
          });

    - name: Comment on commit
      uses: actions/github-script@v7
      if: github.event_name == 'push'
      with:
        script: |
          const { owner, repo } = context.repo;
          const sha = '${{ github.event.workflow_run.head_sha }}';
          
          await github.rest.repos.createCommitComment({
            owner,
            repo,
            commit_sha: sha,
            body: `ðŸš€ **Docker Image Built Successfully**
            
            - **Image**: \`yoruverse/ui:latest\`
            - **Platforms**: linux/amd64, linux/arm64
            - **Size**: Optimized nginx-based image (~53MB)
            - **Registry**: [Docker Hub](https://hub.docker.com/r/yoruverse/ui)
            
            **Quick Deploy:**
            \`\`\`bash
            docker run -d --name yoruverse-ui -p 4321:4321 yoruverse/ui:latest
            \`\`\`
            
            **Access**: http://localhost:4321`
          });

  security-scan:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'yoruverse/ui:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'